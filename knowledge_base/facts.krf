(in-microtheory MakeMeADrinkFactsMt)
(genlMt MakeMeADrinkMt MakeMeADrinkFactsMt)



;;; if a fruit is a citrus fruit, then it is sour
(<== (isSour ?fruit)
     (isa ?fruit CitrusFruit))

;;; if a fruit juice comes from a citrus fruit, then it is sour
(<== (isSour (JuiceOfFn ?fruit))
     (isa ?fruit CitrusFruit))

;;; if a fruit is a stone fruit, then it is sweet
(<== (isSweet ?fruit)
     (isa ?fruit StoneFruit))

(<== (isSweet (JuiceOfFn ?fruit))
     (isa ?fruit StoneFruit))

;;; if a fruit is a berry, then it is sweet
(<== (isSweet ?fruit)
     (isa ?fruit BerryFruit))

(<== (isSweet (JuiceOfFn ?fruit))
     (isa ?fruit BerryFruit))

;;; if something is a simple syrup, then it is sweet
(<== (isSweet ?syrup)
     (isa ?syrup SimpleSyrup))

;;; if something is a bitters, then it is bitter
(<== (isBitter ?bitter)
     (isa ?bitter Bitters))

;;; if an ingredient is a zest, then it is a garnish
(<== (isGarnish ?zest)
     (isa ?zest (ZestOfFn ?fruit))
     (isa ?fruit CitrusFruit))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<== (isa ?cocktail RumCocktail)
     (isa ?cocktail Cocktail)
     (ingredientOf ?ingredient ?cocktail)
     (isa ?ingredient Rum))

(<== (isa ?cocktail TequilaCocktail)
     (isa ?cocktail Cocktail)
     (ingredientOf ?ingredient ?cocktail)
     (isa ?ingredient Tequila))

(<== (isa ?cocktail WhiskeyCocktail)
     (isa ?cocktail Cocktail)
     (ingredientOf ?ingredient ?cocktail)
     (isa ?ingredient Whiskey))

(<== (isa ?cocktail GinCocktail)
     (isa ?cocktail Cocktail)
     (ingredientOf ?ingredient ?cocktail)
     (isa ?ingredient Gin))

(<== (isa ?cocktail VodkaCocktail)
     (isa ?cocktail Cocktail)
     (ingredientOf ?ingredient ?cocktail)
     (isa ?ingredient Vodka))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; find cocktails that don't have what you don't have
(<== (makeableCocktail ?cocktail ?ingredients)
     (isa ?cocktail CocktailDrink)
     (evaluate ?ingredients (TheClosedRetrievalSetOf ?ingredients (hasIngredient ?ingredients)))
     (evaluate ?x
       (SetDifferenceFn
         (TheClosedRetrievalSetOf ?y
           (ingredientOf ?y ?cocktail))
           ?ingredients))
     (equals ?x (TheSet)))

;;; for all ingredients in a cocktail, you have that ingredient

;;; for all ingredients in a cocktail, you have that ingredient


;;; check forall in companions

;;; find cocktail that can substitute sours
; (<== (makeableCocktailWithSub ?cocktail ?substitute)
;      (isa ?cocktail Cocktail)
;      (isSour ?original)
;      (ingredientOf ?original ?cocktail)
;      (not(hasIngredient ?original))     ;;; user does not have original sour ingredient
;      (isSour ?substitute)
;      (hasIngredient ?substitute)        ;;; user does have substitute sour ingredient

;      (not(and(ingredientOf ?ingredient ?cocktail)      ;;; not quite sure if this can just be copy and pasted... it kind of makes sense to me
;                (not(hasIngredient ?ingredient))))
;      ;;; (not(different ?ingredient ?original))        ;;; I don't think this is necessary
;      )

; ;;; find cocktail that can substitute sweets
; (<== (makeableCocktailWithSub ?cocktail ?substitute)
;      (isa ?cocktail Cocktail)
;      (isSweet ?original)
;      (ingredientOf ?original ?cocktail)
;      (not(hasIngredient ?original))
;      (isSweet ?substitute)
;      (hasIngredient ?substitute)
;      )






(<== (CocktailIngredientFn ?x)
    (isa ?x DefaultDisjointEdibleStuffType))

(<== (makeMeADrink ?ingredients)
      (evaluate ?ingredients
          (RandomMemberFn
           (TheClosedRetrievalSetOf ?x (cocktailGoldenRatio ?x)))))

(<== (cocktailGoldenRatio ?ingredients)
    (isa ?spirit Liquor-Drink)
    (isSweet ?sweet)
    (isSour ?sour)
    (different ?spirit ?sweet ?sour)
    (hasIngredient ?spirit)
    (hasIngredient ?sour)
    (hasIngredient ?sweet)
    (evaluate ?ingredients (TheSet (CocktailIngredientFn ?spirit) (CocktailIngredientFn ?sweet)  (CocktailIngredientFn ?sour))))

(<== (stickToTheClasics ?ingredients)
  (isa ?cocktail CocktailDrink)
  (evaluate ?cocktailIngredients (TheClosedRetrievalSetOf ?cocktailIngredients (ingredientOf ?cocktailIngredients ?cocktail)))
  (evaluate ?ingredientsOnHand (TheClosedRetrievalSetOf ?ingredientsOnHand (hasIngredient ?ingredientsOnHand)))
  (evaluate ?missing (SetDifferenceFn ?cocktailIngredients ?ingredientsOnHand))
  (equals ?missing (TheSet))
  (evaluate ?ingredients (SetOrCollectionUnionFn (TheSet (CocktailInspirationFn ?cocktail)) ?cocktailIngredients)))
