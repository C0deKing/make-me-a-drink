(in-microtheory MakeMeADrinkFactsMt)
(genlMt MakeMeADrinkMt MakeMeADrinkFactsMt)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; find cocktails that don't have what you don't have
(<== (makeableCocktail ?cocktail ?ingredients)
     (isa ?cocktail CocktailDrink)
     (evaluate ?ingredients (TheClosedRetrievalSetOf ?ingredients (hasIngredient ?ingredients)))
     (evaluate ?x
       (SetDifferenceFn
         (TheClosedRetrievalSetOf ?y
           (ingredientOf ?y ?cocktail))
           ?ingredients))
     (equals ?x (TheSet)))

;;; for all ingredients in a cocktail, you have that ingredient

;;; for all ingredients in a cocktail, you have that ingredient


;;; check forall in companions

;;; find cocktail that can substitute sours
; (<== (makeableCocktailWithSub ?cocktail ?substitute)
;      (isa ?cocktail Cocktail)
;      (isSour ?original)
;      (ingredientOf ?original ?cocktail)
;      (not(hasIngredient ?original))     ;;; user does not have original sour ingredient
;      (isSour ?substitute)
;      (hasIngredient ?substitute)        ;;; user does have substitute sour ingredient

;      (not(and(ingredientOf ?ingredient ?cocktail)      ;;; not quite sure if this can just be copy and pasted... it kind of makes sense to me
;                (not(hasIngredient ?ingredient))))
;      ;;; (not(different ?ingredient ?original))        ;;; I don't think this is necessary
;      )

; ;;; find cocktail that can substitute sweets
; (<== (makeableCocktailWithSub ?cocktail ?substitute)
;      (isa ?cocktail Cocktail)
;      (isSweet ?original)
;      (ingredientOf ?original ?cocktail)
;      (not(hasIngredient ?original))
;      (isSweet ?substitute)
;      (hasIngredient ?substitute)
;      )
